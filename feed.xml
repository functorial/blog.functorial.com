<rss version="2.0">
  <channel>
    <title>functorial</title>
    <link>http://blog.functorial.com</link>
    <description>functorial</description>
    <item>
      <title>Existential Types in C#</title>
      <link>http://blog.functorial.com/posts/2010-12-04-Existential-Types.html</link>
      <description>An encoding of existential types in C#, with some examples.</description>
      <guid isPermaLink="true">http://blog.functorial.com/posts/2010-12-04-Existential-Types.html</guid>
      <pubDate>Sat, 04 Dec 2010 00:12:1291420800 GMT</pubDate>
    </item>
    <item>
      <title>Least Fixed Points and Catamorphisms in C#</title>
      <link>http://blog.functorial.com/posts/2010-12-04-Least-Fixed-Points.html</link>
      <description>An encoding of least fixed point types in C#, with finite lists as an example.</description>
      <guid isPermaLink="true">http://blog.functorial.com/posts/2010-12-04-Least-Fixed-Points.html</guid>
      <pubDate>Sat, 04 Dec 2010 00:12:1291420800 GMT</pubDate>
    </item>
    <item>
      <title>Greatest Fixed Points and Anamorphisms in C#</title>
      <link>http://blog.functorial.com/posts/2010-12-05-Greatest-Fixed-Points.html</link>
      <description>An encoding of greatest fixed points in C#, with streams as an example.</description>
      <guid isPermaLink="true">http://blog.functorial.com/posts/2010-12-05-Greatest-Fixed-Points.html</guid>
      <pubDate>Sun, 05 Dec 2010 00:12:1291507200 GMT</pubDate>
    </item>
    <item>
      <title>Greatest Fixed Points Part 2 - The Conaturals</title>
      <link>http://blog.functorial.com/posts/2010-12-06-Conaturals.html</link>
      <description>The Conatural numbers and their arithmetic, using greatest fixed points.</description>
      <guid isPermaLink="true">http://blog.functorial.com/posts/2010-12-06-Conaturals.html</guid>
      <pubDate>Mon, 06 Dec 2010 00:12:1291593600 GMT</pubDate>
    </item>
    <item>
      <title>Histomorphisms, Dynamic Programming and the Knapsack Problem</title>
      <link>http://blog.functorial.com/posts/2010-12-10-Histomorphisms.html</link>
      <description>Using histomorphisms via least fixed points to solve dynamic programming problems.</description>
      <guid isPermaLink="true">http://blog.functorial.com/posts/2010-12-10-Histomorphisms.html</guid>
      <pubDate>Fri, 10 Dec 2010 00:12:1291939200 GMT</pubDate>
    </item>
    <item>
      <title>Value Lifting, Bounded Existentials and the Visitor Pattern</title>
      <link>http://blog.functorial.com/posts/2010-12-15-Balanced-Trees.html</link>
      <description>Encoding balanced trees in C# using generics</description>
      <guid isPermaLink="true">http://blog.functorial.com/posts/2010-12-15-Balanced-Trees.html</guid>
      <pubDate>Wed, 15 Dec 2010 00:12:1292371200 GMT</pubDate>
    </item>
    <item>
      <title>LINQ to Probability Distributions</title>
      <link>http://blog.functorial.com/posts/2011-01-03-Probability-Distributions.html</link>
      <description>LINQ syntax for working with probability distributions</description>
      <guid isPermaLink="true">http://blog.functorial.com/posts/2011-01-03-Probability-Distributions.html</guid>
      <pubDate>Mon, 03 Jan 2011 00:01:1294012800 GMT</pubDate>
    </item>
    <item>
      <title>A Lemma on Fixed Points</title>
      <link>http://blog.functorial.com/posts/2011-01-27-A-Lemma-On-Fixed-Points.html</link>
      <description>An equation involving fixed points of functors.</description>
      <guid isPermaLink="true">http://blog.functorial.com/posts/2011-01-27-A-Lemma-On-Fixed-Points.html</guid>
      <pubDate>Thu, 27 Jan 2011 00:01:1296086400 GMT</pubDate>
    </item>
    <item>
      <title>Strongly-Typed Format Strings</title>
      <link>http://blog.functorial.com/posts/2011-01-27-Typed-Format-Strings.html</link>
      <description>A type-safe version of the string.Format method.</description>
      <guid isPermaLink="true">http://blog.functorial.com/posts/2011-01-27-Typed-Format-Strings.html</guid>
      <pubDate>Thu, 27 Jan 2011 00:01:1296086400 GMT</pubDate>
    </item>
    <item>
      <title>Finite Automata and Typed String Parsing</title>
      <link>http://blog.functorial.com/posts/2011-02-02-Typed-String-Parsing.html</link>
      <description>A type-safe version of the scanf function in C#.</description>
      <guid isPermaLink="true">http://blog.functorial.com/posts/2011-02-02-Typed-String-Parsing.html</guid>
      <pubDate>Wed, 02 Feb 2011 00:02:1296604800 GMT</pubDate>
    </item>
    <item>
      <title>Decorating Recursive Types</title>
      <link>http://blog.functorial.com/posts/2011-02-03-Decorating-Recursive-Types.html</link>
      <description>An attempt to extend recursive types in a way which is compatible with subclassing.</description>
      <guid isPermaLink="true">http://blog.functorial.com/posts/2011-02-03-Decorating-Recursive-Types.html</guid>
      <pubDate>Fri, 03 Feb 2012 00:02:1328227200 GMT</pubDate>
    </item>
    <item>
      <title>Mutually Recursive Types and Functions</title>
      <link>http://blog.functorial.com/posts/2011-02-16-Mutually-Recursive-Types.html</link>
      <description>Encoding mutually recursive least and greatest fixed points in C#</description>
      <guid isPermaLink="true">http://blog.functorial.com/posts/2011-02-16-Mutually-Recursive-Types.html</guid>
      <pubDate>Wed, 16 Feb 2011 00:02:1297814400 GMT</pubDate>
    </item>
    <item>
      <title>The Ins and Outs of Fixed Point Types</title>
      <link>http://blog.functorial.com/posts/2011-02-17-Ins-And-Outs.html</link>
      <description>The algebra and coalegbra morphisms for least and greatest fixed point types</description>
      <guid isPermaLink="true">http://blog.functorial.com/posts/2011-02-17-Ins-And-Outs.html</guid>
      <pubDate>Thu, 17 Feb 2011 00:02:1297900800 GMT</pubDate>
    </item>
    <item>
      <title>Abstraction Elimination in Purity</title>
      <link>http://blog.functorial.com/posts/2011-05-01-Abstraction-Elimination-In-Purity.html</link>
      <description>An explanation of abstraction elimination in the Purity programming language.</description>
      <guid isPermaLink="true">http://blog.functorial.com/posts/2011-05-01-Abstraction-Elimination-In-Purity.html</guid>
      <pubDate>Tue, 01 May 2012 00:05:1335830400 GMT</pubDate>
    </item>
    <item>
      <title>Typechecking a Purity Program</title>
      <link>http://blog.functorial.com/posts/2011-05-02-Typechecking-A-Purity-Program.html</link>
      <description>An explanation of the typechecking algorithm in the Purity programming language</description>
      <guid isPermaLink="true">http://blog.functorial.com/posts/2011-05-02-Typechecking-A-Purity-Program.html</guid>
      <pubDate>Mon, 02 May 2011 00:05:1304294400 GMT</pubDate>
    </item>
    <item>
      <title>Enumerating Permutations</title>
      <link>http://blog.functorial.com/posts/2011-12-28-Enumerating-Permutations.html</link>
      <description>Deriving the &#39;next permutation&#39; using equational reasoning in Haskell</description>
      <guid isPermaLink="true">http://blog.functorial.com/posts/2011-12-28-Enumerating-Permutations.html</guid>
      <pubDate>Wed, 28 Dec 2011 00:12:1325030400 GMT</pubDate>
    </item>
    <item>
      <title>Fun With PolyKinds: Polykinded Folds</title>
      <link>http://blog.functorial.com/posts/2012-02-02-Polykinded-Folds.html</link>
      <description>Generalizing folds and unfolds to other kinds using the PolyKinds GHC Extension..</description>
      <guid isPermaLink="true">http://blog.functorial.com/posts/2012-02-02-Polykinded-Folds.html</guid>
      <pubDate>Thu, 02 Feb 2012 00:02:1328140800 GMT</pubDate>
    </item>
    <item>
      <title>Solving Constraints Generically</title>
      <link>http://blog.functorial.com/posts/2012-02-06-Solving-Constraints-Generically.html</link>
      <description>Generalizing constraint solving algorithms over arbitrary term algebras.</description>
      <guid isPermaLink="true">http://blog.functorial.com/posts/2012-02-06-Solving-Constraints-Generically.html</guid>
      <pubDate>Mon, 06 Feb 2012 00:02:1328486400 GMT</pubDate>
    </item>
    <item>
      <title>Doubly-Recursive Functions, Generically</title>
      <link>http://blog.functorial.com/posts/2012-02-12-Doubly-Recursive-Functions-Generically.html</link>
      <description>A generic formulation of &#39;doubly-recursive&#39; functions in Haskell</description>
      <guid isPermaLink="true">http://blog.functorial.com/posts/2012-02-12-Doubly-Recursive-Functions-Generically.html</guid>
      <pubDate>Sun, 12 Feb 2012 00:02:1329004800 GMT</pubDate>
    </item>
    <item>
      <title>Typing Linear Lambda Terms</title>
      <link>http://blog.functorial.com/posts/2012-02-12-Typing-Linear-Lambda-Terms.html</link>
      <description>An encoding of linear lambda terms in Haskell which prevents the expression of invalid terms.</description>
      <guid isPermaLink="true">http://blog.functorial.com/posts/2012-02-12-Typing-Linear-Lambda-Terms.html</guid>
      <pubDate>Sun, 12 Feb 2012 00:02:1329004800 GMT</pubDate>
    </item>
    <item>
      <title>What if Haskell had (co)-equalizers?</title>
      <link>http://blog.functorial.com/posts/2012-02-19-What-If-Haskell-Had-Equalizers.html</link>
      <description>A thought-experiment on the possibility of extending the Haskell type system with equalizers and coequalizers.</description>
      <guid isPermaLink="true">http://blog.functorial.com/posts/2012-02-19-What-If-Haskell-Had-Equalizers.html</guid>
      <pubDate>Sun, 19 Feb 2012 00:02:1329609600 GMT</pubDate>
    </item>
    <item>
      <title>Abstraction Elimination For Linear Lambda Terms</title>
      <link>http://blog.functorial.com/posts/2012-02-21-Abstraction-Elimination-For-Linear-Lambda-Terms.html</link>
      <description>An abstraction elimination for linear lambda terms</description>
      <guid isPermaLink="true">http://blog.functorial.com/posts/2012-02-21-Abstraction-Elimination-For-Linear-Lambda-Terms.html</guid>
      <pubDate>Tue, 21 Feb 2012 00:02:1329782400 GMT</pubDate>
    </item>
    <item>
      <title>Haskell On Azure</title>
      <link>http://blog.functorial.com/posts/2012-04-29-Haskell-On-Azure.html</link>
      <description>Running HappStack in an Azure worker role instance, and using the tablestorage cabal package.</description>
      <guid isPermaLink="true">http://blog.functorial.com/posts/2012-04-29-Haskell-On-Azure.html</guid>
      <pubDate>Sun, 29 Apr 2012 00:04:1335657600 GMT</pubDate>
    </item>
    <item>
      <title>Generalizing O(1) Snoc On Lists</title>
      <link>http://blog.functorial.com/posts/2012-06-17-Generalizing-Snoc.html</link>
      <description>A generalization of snoc to traversable data structures</description>
      <guid isPermaLink="true">http://blog.functorial.com/posts/2012-06-17-Generalizing-Snoc.html</guid>
      <pubDate>Sun, 17 Jun 2012 00:06:1339891200 GMT</pubDate>
    </item>
    <item>
      <title>What Makes the Free Monad Free?</title>
      <link>http://blog.functorial.com/posts/2012-07-22-What-Makes-The-Free-Monad-Free.html</link>
      <description>An explanation of the term &#39;free&#39; monad in terms of adjunctions.</description>
      <guid isPermaLink="true">http://blog.functorial.com/posts/2012-07-22-What-Makes-The-Free-Monad-Free.html</guid>
      <pubDate>Sun, 22 Jul 2012 00:07:1342915200 GMT</pubDate>
    </item>
    <item>
      <title>Testing Random Properties With Type Classes</title>
      <link>http://blog.functorial.com/posts/2012-08-04-Testing-Random-Properties-With-Type-Classes.html</link>
      <description>Using type classes to test QuickCheck properties involving random number generation.</description>
      <guid isPermaLink="true">http://blog.functorial.com/posts/2012-08-04-Testing-Random-Properties-With-Type-Classes.html</guid>
      <pubDate>Sat, 04 Aug 2012 00:08:1344038400 GMT</pubDate>
    </item>
    <item>
      <title>One-Hole Contexts Generalize Diff To Containers</title>
      <link>http://blog.functorial.com/posts/2012-12-21-One-Hole-Contexts-Generalize-Diff-To-Containers.html</link>
      <description>A generalization of the usual diff/patch functions on lists to arbitrary container types</description>
      <guid isPermaLink="true">http://blog.functorial.com/posts/2012-12-21-One-Hole-Contexts-Generalize-Diff-To-Containers.html</guid>
      <pubDate>Fri, 21 Dec 2012 00:12:1356048000 GMT</pubDate>
    </item>
    <item>
      <title>A Typed Markup Language Based On Haskell</title>
      <link>http://blog.functorial.com/posts/2013-05-18-Typed-Markup-Language.html</link>
      <description>A simple markup language inspired by Haskell, including a type checker and parser.</description>
      <guid isPermaLink="true">http://blog.functorial.com/posts/2013-05-18-Typed-Markup-Language.html</guid>
      <pubDate>Sat, 18 May 2013 00:05:1368835200 GMT</pubDate>
    </item>
    <item>
      <title>Teaching Haskell To Juggle</title>
      <link>http://blog.functorial.com/posts/2013-05-23-Teaching-Haskell-To-Juggle.html</link>
      <description></description>
      <guid isPermaLink="true">http://blog.functorial.com/posts/2013-05-23-Teaching-Haskell-To-Juggle.html</guid>
      <pubDate>Sat, 25 May 2013 00:05:1369440000 GMT</pubDate>
    </item>
    <item>
      <title>The Visitor Pattern and Pattern Matching</title>
      <link>http://blog.functorial.com/posts/2013-10-02-Visitor-Pattern.html</link>
      <description></description>
      <guid isPermaLink="true">http://blog.functorial.com/posts/2013-10-02-Visitor-Pattern.html</guid>
      <pubDate>Wed, 02 Oct 2013 00:10:1380672000 GMT</pubDate>
    </item>
    <pubDate>Wed, 02 Oct 2013 23:10:1380756437 GMT</pubDate>
    <lastBuildDate>Wed, 02 Oct 2013 23:10:1380756437 GMT</lastBuildDate>
  </channel>
</rss>